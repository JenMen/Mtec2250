#define toggleSwitch 8
long randNumber;
#include <LiquidCrystal.h>

// initialize the library with the numbers of the interface pins
LiquidCrystal lcd(12,11,2, 3, 4, 5);

int select1 = 9;
int select2 = 10;

int toggleState = 0;
int Stepcounter = 0;

int buttonState = 0;
int buttonState1 = 0;

boolean bspressing = false;
boolean bs1pressing = false;
boolean button1 = false;
boolean button2 = false;

boolean pressing = false;

int event1 = 10;
int event2 = 20;

//How many bonds u have. More bonds = more chance at victory in battle
int bond =0;

//Will check the fed count at step '25'
int feed = 0;
int feedcheck = 25;
String checkpoint = "Checkpoint Reached!";

int feedevent[] = { 10, 20, 30 };
String evolve = "Something is happening to the digi....It evolved! It looks alot stronger";

boolean message1 = true;

void setup() {
   // set up the LCD's number of columns and rows:
  lcd.begin(16, 2);
  // Print a message to the LCD.
 // lcd.print("hello, world!");
 // lcd.clear();
  delay(1000);
  Serial.begin(9600);
  pinMode(toggleSwitch, INPUT);
  pinMode(select1, INPUT);
  pinMode(select2, INPUT);
  lcd.begin(16, 2);
  // Print a message to the LCD.
  lcd.print("hello, world!");
  lcd.clear();
}
void loop() {
 // set the cursor to column 0, line 0
  lcd.setCursor(0, 0);
  lcd.print("Step Counter");
  
    
   // set the cursor to column 0, line 1
  lcd.setCursor(0, 1); 
  // print the number of seconds since reset:
  lcd.print(Stepcounter);
   
  //end LCD setup

  toggleState = digitalRead(toggleSwitch);
  delay(1);
  buttonState = digitalRead(select1);
  delay(1);
  buttonState1 = digitalRead(select2);
  delay(1);

  //step counter
  if (toggleState == HIGH) {
    pressing = true;

  }

  if (toggleState == LOW && pressing == true) {
    pressing = false;

    Serial.print("Step");
    Stepcounter += 1;
    Serial.println(Stepcounter);
    

  }
  //button 1
  if (buttonState == HIGH) {
    bspressing = true;
  }

  if (buttonState == LOW && bspressing == true) {
    bspressing = false;
    Serial.println("Yes");
    button1 = true;
  }
  //button2
  if (buttonState1 == HIGH) {
    bs1pressing = true;

  }

  if (buttonState1 == LOW && bs1pressing == true) {
    bs1pressing = false;

    Serial.println("No");
    button2 = true;
  }

//game starts here

  if (Stepcounter == feedevent[0]) {
    if (message1 == true) {
      Serial.println(checkpoint);
      Serial.println("It's feeding time, Do you want to feed your digi");
       lcd.setCursor(0, 0);
       lcd.print("Feed it?");
       delay(2500);
      message1 = false;
    }
    if (button1 == true) {
      feed++;
      Serial.println("ITADAKIMASU!");
       lcd.setCursor(0, 0);
       lcd.print("ITADAKIMASU!");
       delay(3000);
       lcd.print(0, 1);
       lcd.print("   +2 bond");
       delay(3000);
  lcd.clear();
      button1 = false;
      Stepcounter++;
    }

    if (button2 == true) {
      feed--;
      Serial.println(checkpoint);
      Serial.println("Let's keep walking");
       lcd.setCursor(0, 0);
       lcd.print("Let's keep walking");
       delay(500);
  lcd.clear();
      button2 = false;
      Stepcounter++;
    }

  }

    if (Stepcounter == feedcheck) {

    if (feed >= 1) {
      Serial.println(checkpoint);
      Serial.println("Health check...Digi is alive");
       lcd.setCursor(0, 0);
       delay(1000);
       lcd.print("Health Check....");
       delay(500);
       lcd.setCursor(0, 1);
       lcd.print("Digi Is Alive ");
       delay(1000);
  lcd.clear();
      Stepcounter++;
    }

    if (feed <= 0) {
      Serial.println("Digi starved");
      Serial.println("Back to previous Checkpoint");
  lcd.setCursor(0, 0);
  lcd.print("Digi Starved...");
  lcd.setCursor(0, 1);
  lcd.print("Start Again");
  lcd.clear();
      Stepcounter = 0;
    }

  //If feed once, it increase bond by 2
  //if 2 times, it increase by 4
    if (feed ==1)
    {
      bond+=2;
    }
    else if (feed==2)
    {
      bond+=4;
    }
  }
  if (Stepcounter == 40){
    Serial.println(evolve);
    Stepcounter++;
    Serial.println(checkpoint);
    lcd.print("Checkpoint");
    delay(1000);
    lcd.clear();
  }
//This is the part where it starts to encounter monsters
  if (Stepcounter > 40)
  {
    if (Stepcounter ==55)
    {
      int victory = enemyEncounter();
      Serial.println(victory);
      if (victory == 1)
      {//if we won
        if(bond<5)
        {
          bond++;
          Serial.println("You Win!");
          Serial.println("+1 Bond");
  lcd.setCursor(0, 0);
  lcd.print("You Win!");
  delay(1000);
  lcd.setCursor(0, 1);
    lcd.print("+1 Bond");
        delay(1000);
  lcd.clear();
        }
      }
      else
      {//we lost
        bond--;
      }
      Stepcounter++;
    }
  }
 if (Stepcounter ==70)
    {
   //   int victory = enemyEncounter(); //commented
      Serial.println(victory);
      if (victory == 1)
      {//if we won
        if(bond<5)
        {
          bond++;
          Serial.println("You Win!");
          Serial.println("+1 Bond");
  lcd.setCursor(0, 0);
  lcd.print("You Win!");
  delay(1000);
  lcd.setCursor(0, 1);
    lcd.print("+1 Bond");
        delay(1000);
  lcd.clear();
        }
      }
      else
      {//we lost
        bond--;
      }
      Stepcounter++;
    }
  }

  //Ending
  if (Stepcounter==100)
  {
    Serial.print("bond: ");
    Serial.println(bond);
    Serial.println();
    Serial.println("Congradulations! Your a good parent.");
      lcd.setCursor(0, 0);
       delay(1000);
       lcd.print("You Win!");
       delay(1000);
    Serial.println("Game Reset");
     delay(1000);
    Stepcounter=0;
  }
  
}
int enemyEncounter()
{
  int chance=0;
  if (bond==2)
  {
    chance=60;
  }
  else if (bond==3)
  {
    chance=70;
  }
  else if (bond==4)
  {
    chance=80;
  }
  else if (bond==5)
  {
    chance=90;
  }
  else
  {
    chance=50;
  }

  int randomNum=random(100);
  Serial.print("Chance: ");
  Serial.println(chance);
  Serial.print("Random Num: ");
  Serial.println(randomNum);
  //return 1 if we have victory
  //returns 0 if we lose.
  if ( randomNum<=chance)
  {
    return 1;
  }
  else 
  {
    return 0;
  }
}
